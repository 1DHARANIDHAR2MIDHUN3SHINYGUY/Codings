Input:
6
4
1 2
2 3
3 4
2 4

Output
0
1 -> 2
2 -> 1 -> 3 -> 4
3 -> 2 -> 4
4 -> 3 -> 2
5

import java.io.*; 
import java.util.*; 
 
public class Solution { 
 
    public static void main(String[] args) { 
        Scanner z = new Scanner(System.in); 
         
        ArrayList<ArrayList<Integer>> l = new ArrayList<ArrayList<Integer>>(); 
        int v = z.nextInt(); 
 
        for (int i = 0; i < v; i++)  
            l.add(new ArrayList<Integer>()); 
 
        while (z.hasNextInt()) { 
            int v1 = z.nextInt(); 
            int v2 = z.nextInt(); 
            l.get(v1).add(v2); 
            l.get(v2).add(v1); 
        } 
 
        for (int i = 0; i < v; i++) { 
            System.out.print(i + "-> "); 
            for (int j = 0; j < l.get(i).size(); j++) { 
                System.out.print(l.get(i).get(j) + " "); 
            } 
            System.out.println(); 
        } 
    } 
}
--------------------------------------------------------------------


#include<bits/stdc++.h>
using namespace std ;

void addEdge(vector<int> adj[], int u, int v)
{
	adj[u].push_back(v);
	adj[v].push_back(u);
}

void printGraph(vector<int> adj[], int V)
{
	for (int v = 0; v < V; ++v)
	{
		cout << v ;
		for (int i = 0 ; i < adj[v].size() ; i++)
		cout << " -> " << adj[v][i];
		printf("\n");
	}
}

int main()
{
	int V , a , b ;
  	cin >> V ;
  	int E , c ;
  	cin >> E ;
  	vector<int> adj[V];
  	for(int i = 0 ; i<E ; i++)
    {
      cin >> a >> b ;
      addEdge(adj, a, b) ;
    }
	printGraph(adj, V);
	return 0;
}
